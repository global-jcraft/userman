version: 2.1

jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Calculate Cache Key
          command: |-
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Build the Project
          command: ./gradlew build
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper

  unit-tests:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Run Unit Tests
          command: ./gradlew test
      - store_test_results:
          path: build/test-results/test

  code-quality:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Calculate Cache Key
          command: |-
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Run SonarQube Analysis
          command: gradle build sonarqube

  owasp-check:
    docker:
      - image: owasp/dependency-check:latest
    steps:
      - checkout
      - run:
          name: Create Output Directory
          command: mkdir -p ./dependency-check-report
      - run:
          name: Run OWASP Dependency Check
          command: |
            /usr/share/dependency-check/bin/dependency-check.sh \
            --project "userman" \
            --scan ./ \
            --format "ALL" \
            --out ./dependency-check-report
      - store_artifacts:
          path: ./dependency-check-report
          destination: owasp-reports

  package:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Package the Application
          command: ./gradlew bootJar
      - store_artifacts:
          path: build/libs/

  docker-build:
    docker:
      - image: docker:20.10.16
    steps:
      - checkout
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            docker build -t docker.io/jcraft/jcraft-userman:latest .
      - run:
          name: Push Docker Image
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push docker.io/jcraft/jcraft-userman:latest

  deploy-staging:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Deploy to Staging
          command: ./scripts/deploy.sh staging

  deploy-production:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Deploy to Production
          command: ./scripts/deploy.sh production

workflows:
  build-test-deploy:
    jobs:
      - build
      - unit-tests:
          requires:
            - build
      - code-quality:
          requires:
            - build
          context: SonarCloud
      - owasp-check:
          requires:
            - build
      - package:
          requires:
            - unit-tests
            - owasp-check
      - docker-build:
          requires:
            - package
      - deploy-staging:
          requires:
            - docker-build
      - deploy-production:
          requires:
            - deploy-staging
