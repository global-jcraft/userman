version: 2.1

executors:
  java-docker:
    docker:
      - image: cimg/openjdk:17.0

  docker-executor:
    docker:
      - image: docker:latest

  base-executor:
    docker:
      - image: cimg/base:stable

jobs:
  build:
    executor: java-docker
    steps:
      - checkout
      - run:
          name: Build the Project
          command: ./gradlew build

  unit-tests:
    executor: java-docker
    steps:
      - checkout
      - run:
          name: Run Unit Tests
          command: ./gradlew test
      - store_test_results:
          path: build/test-results/test

  spotless:
    executor: java-docker
    steps:
      - checkout
      - run:
          name: Check and Apply Formatting with Spotless
          command: |
            ./gradlew spotlessCheck || (echo "Spotless check failed. Fixing issues..." && ./gradlew spotlessApply)

  code-quality:
    executor: java-docker
    steps:
      - checkout
      - run:
          name: Run SonarQube Analysis
          command: gradle build sonarqube

  package:
    executor: java-docker
    steps:
      - checkout
      - run:
          name: Package the Application
          command: ./gradlew bootJar
      - persist_to_workspace:
          root: build/libs/
          paths:
            - '*.jar'

  docker-build:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - run:
          name: Copy JAR from Workspace
          command: cp /workspace/*.jar .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker Image
          command: docker build -t docker.io/${DOCKER_USERNAME}/jcraft-userman:latest .
      - run:
          name: Push Docker Image
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push docker.io/${DOCKER_USERNAME}/jcraft-userman:latest

  deploy-develop:
    executor: base-executor
    steps:
      - run:
          name: Deploy to Staging
          command: ./scripts/deploy.sh staging

  deploy-production:
    executor: base-executor
    steps:
      - run:
          name: Deploy to Production
          command: ./scripts/deploy.sh production

workflows:
  build-test-deploy:
    jobs:
      - build
      - spotless:
          requires:
            - build
      - unit-tests:
          requires:
            - build
      - code-quality:
          requires:
            - build
          context: SonarCloud
      - package:
          requires:
            - unit-tests
      - docker-build:
          requires:
            - package
          filters:
            branches:
              only:
                - develop
      - deploy-develop:
          requires:
            - docker-build
          filters:
            branches:
              only:
                - develop
      - deploy-production:
          requires:
            - deploy-develop
          filters:
            branches:
              only:
                - master
